/* [project]/frontend/app/globals.css [app-client] (css) */
*, :before, :after, ::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #3b82f680;
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}

*, :before, :after {
  box-sizing: border-box;
  border: 0 solid #e5e7eb;
}

:before, :after {
  --tw-content: "";
}

html, :host {
  -webkit-text-size-adjust: 100%;
  tab-size: 4;
  font-feature-settings: normal;
  font-variation-settings: normal;
  -webkit-tap-highlight-color: transparent;
  font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  line-height: 1.5;
}

body {
  line-height: inherit;
  margin: 0;
}

hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}

abbr:where([title]) {
  text-decoration: underline dotted;
}

h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}

a {
  color: inherit;
  text-decoration: inherit;
}

b, strong {
  font-weight: bolder;
}

code, kbd, samp, pre {
  font-feature-settings: normal;
  font-variation-settings: normal;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
  font-size: 1em;
}

small {
  font-size: 80%;
}

sub, sup {
  vertical-align: baseline;
  font-size: 75%;
  line-height: 0;
  position: relative;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}

button, input, optgroup, select, textarea {
  font-feature-settings: inherit;
  font-variation-settings: inherit;
  font-family: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
}

button, select {
  text-transform: none;
}

button, input:where([type="button"]), input:where([type="reset"]), input:where([type="submit"]) {
  -webkit-appearance: button;
  background-color: #0000;
  background-image: none;
}

:-moz-focusring {
  outline: auto;
}

:-moz-ui-invalid {
  box-shadow: none;
}

progress {
  vertical-align: baseline;
}

::-webkit-inner-spin-button {
  height: auto;
}

::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

summary {
  display: list-item;
}

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol, ul, menu {
  margin: 0;
  padding: 0;
  list-style: none;
}

dialog {
  padding: 0;
}

textarea {
  resize: vertical;
}

input::placeholder, textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button, [role="button"] {
  cursor: pointer;
}

:disabled {
  cursor: default;
}

img, svg, video, canvas, audio, iframe, embed, object {
  vertical-align: middle;
  display: block;
}

img, video {
  max-width: 100%;
  height: auto;
}

[hidden] {
  display: none;
}

:where(:root), :root:has(input.theme-controller[value="light"]:checked), [data-theme="light"] {
  --lightningcss-light: initial;
  --lightningcss-dark: ;
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% .006 285.885);
  --color-primary: oklch(45% .24 277.023);
  --color-primary-content: oklch(93% .034 272.788);
  --color-secondary: oklch(65% .241 354.308);
  --color-secondary-content: oklch(94% .028 342.258);
  --color-accent: oklch(77% .152 181.912);
  --color-accent-content: oklch(38% .063 188.416);
  --color-neutral: oklch(14% .005 285.823);
  --color-neutral-content: oklch(92% .004 286.32);
  --color-info: oklch(74% .16 232.661);
  --color-info-content: oklch(29% .066 243.157);
  --color-success: oklch(76% .177 163.223);
  --color-success-content: oklch(37% .077 168.94);
  --color-warning: oklch(82% .189 84.429);
  --color-warning-content: oklch(41% .112 45.904);
  --color-error: oklch(71% .194 13.428);
  --color-error-content: oklch(27% .105 12.094);
  --radius-selector: .5rem;
  --radius-field: .25rem;
  --radius-box: .5rem;
  --size-selector: .25rem;
  --size-field: .25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

@media (prefers-color-scheme: dark) {
  :root:not([data-theme]) {
    --lightningcss-light: ;
    --lightningcss-dark: initial;
    color-scheme: dark;
    --color-base-100: oklch(25.33% .016 252.42);
    --color-base-200: oklch(23.26% .014 253.1);
    --color-base-300: oklch(21.15% .012 254.09);
    --color-base-content: oklch(97.807% .029 256.847);
    --color-primary: oklch(58% .233 277.117);
    --color-primary-content: oklch(96% .018 272.314);
    --color-secondary: oklch(65% .241 354.308);
    --color-secondary-content: oklch(94% .028 342.258);
    --color-accent: oklch(77% .152 181.912);
    --color-accent-content: oklch(38% .063 188.416);
    --color-neutral: oklch(14% .005 285.823);
    --color-neutral-content: oklch(92% .004 286.32);
    --color-info: oklch(74% .16 232.661);
    --color-info-content: oklch(29% .066 243.157);
    --color-success: oklch(76% .177 163.223);
    --color-success-content: oklch(37% .077 168.94);
    --color-warning: oklch(82% .189 84.429);
    --color-warning-content: oklch(41% .112 45.904);
    --color-error: oklch(71% .194 13.428);
    --color-error-content: oklch(27% .105 12.094);
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}

:root:has(input.theme-controller[value="light"]:checked), [data-theme="light"] {
  --lightningcss-light: initial;
  --lightningcss-dark: ;
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% .006 285.885);
  --color-primary: oklch(45% .24 277.023);
  --color-primary-content: oklch(93% .034 272.788);
  --color-secondary: oklch(65% .241 354.308);
  --color-secondary-content: oklch(94% .028 342.258);
  --color-accent: oklch(77% .152 181.912);
  --color-accent-content: oklch(38% .063 188.416);
  --color-neutral: oklch(14% .005 285.823);
  --color-neutral-content: oklch(92% .004 286.32);
  --color-info: oklch(74% .16 232.661);
  --color-info-content: oklch(29% .066 243.157);
  --color-success: oklch(76% .177 163.223);
  --color-success-content: oklch(37% .077 168.94);
  --color-warning: oklch(82% .189 84.429);
  --color-warning-content: oklch(41% .112 45.904);
  --color-error: oklch(71% .194 13.428);
  --color-error-content: oklch(27% .105 12.094);
  --radius-selector: .5rem;
  --radius-field: .25rem;
  --radius-box: .5rem;
  --size-selector: .25rem;
  --size-field: .25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root:has(input.theme-controller[value="dark"]:checked), [data-theme="dark"] {
  --lightningcss-light: ;
  --lightningcss-dark: initial;
  color-scheme: dark;
  --color-base-100: oklch(25.33% .016 252.42);
  --color-base-200: oklch(23.26% .014 253.1);
  --color-base-300: oklch(21.15% .012 254.09);
  --color-base-content: oklch(97.807% .029 256.847);
  --color-primary: oklch(58% .233 277.117);
  --color-primary-content: oklch(96% .018 272.314);
  --color-secondary: oklch(65% .241 354.308);
  --color-secondary-content: oklch(94% .028 342.258);
  --color-accent: oklch(77% .152 181.912);
  --color-accent-content: oklch(38% .063 188.416);
  --color-neutral: oklch(14% .005 285.823);
  --color-neutral-content: oklch(92% .004 286.32);
  --color-info: oklch(74% .16 232.661);
  --color-info-content: oklch(29% .066 243.157);
  --color-success: oklch(76% .177 163.223);
  --color-success-content: oklch(37% .077 168.94);
  --color-warning: oklch(82% .189 84.429);
  --color-warning-content: oklch(41% .112 45.904);
  --color-error: oklch(71% .194 13.428);
  --color-error-content: oklch(27% .105 12.094);
  --radius-selector: .5rem;
  --radius-field: .25rem;
  --radius-box: .5rem;
  --size-selector: .25rem;
  --size-field: .25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root {
  --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='200' height='200' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
}

@property --radialprogress {
  syntax: "<percentage>";
  inherits: true;
  initial-value: 0%;
}

@keyframes set-page-has-scroll {
  0%, to {
    --page-has-scroll: 1;
  }
}

:root, [data-theme] {
  background-color: var(--root-bg, var(--color-base-100));
  color: var(--color-base-content);
}

:where(:root, [data-theme]) {
  --root-bg: var(--color-base-100);
}

@layer daisyui.component {
  .textarea {
    border: var(--border) solid #0000;
    appearance: none;
    border-radius: var(--radius-field);
    background-color: var(--color-base-100);
    vertical-align: middle;
    width: clamp(3rem, 20rem, 100%);
    min-height: 5rem;
    font-size: max(var(--font-size, .875rem), .875rem);
    touch-action: manipulation;
    border-color: var(--input-color);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * .1)) inset;
    --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    flex-shrink: 1;
    padding-block: .5rem;
    padding-inline: .75rem;
  }

  .textarea textarea {
    appearance: none;
    background-color: #0000;
    border: none;
  }

  .textarea textarea:focus, .textarea textarea:focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .textarea textarea:focus, .textarea textarea:focus-within {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .textarea:focus, .textarea:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }

  @media (pointer: coarse) {
    @supports (-webkit-touch-callout: none) {
      .textarea:focus, .textarea:focus-within {
        --font-size: 1rem;
      }
    }
  }

  .textarea:has( > textarea[disabled]), .textarea:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
  }

  .textarea:has( > textarea[disabled])::placeholder, .textarea:is(:disabled, [disabled])::placeholder {
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }

  .textarea:has( > textarea[disabled]), .textarea:is(:disabled, [disabled]) {
    box-shadow: none;
  }

  .textarea:has( > textarea[disabled]) > textarea[disabled] {
    cursor: not-allowed;
  }

  .checkbox {
    border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--color-base-content);
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * .1)) inset, 0 0 #0000 inset, 0 0 #0000;
    --size: calc(var(--size-selector, .25rem) * 6);
    width: var(--size);
    height: var(--size);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    flex-shrink: 0;
    padding: .25rem;
    transition: background-color .2s, box-shadow .2s;
    display: inline-block;
    position: relative;
  }

  .checkbox:before {
    --tw-content: "";
    content: var(--tw-content);
    opacity: 0;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
    width: 100%;
    height: 100%;
    box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * .1)) inset;
    background-color: currentColor;
    font-size: 1rem;
    line-height: .75;
    transition: clip-path .3s .1s, opacity .1s .1s, rotate .3s .1s, translate .3s .1s;
    display: block;
    rotate: 45deg;
  }

  .checkbox:focus-visible {
    outline: 2px solid var(--input-color, currentColor);
    outline-offset: 2px;
  }

  .checkbox:checked, .checkbox[aria-checked="true"] {
    background-color: var(--input-color, #0000);
    box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * .1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * .1));
  }

  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
    opacity: 1;
  }

  @media (forced-colors: active) {
    .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
      --tw-content: "✔︎";
      clip-path: none;
      background-color: #0000;
      rotate: none;
    }
  }

  @media print {
    .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
      --tw-content: "✔︎";
      clip-path: none;
      background-color: #0000;
      rotate: none;
    }
  }

  .checkbox:indeterminate {
    background-color: var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
  }

  .checkbox:indeterminate:before {
    opacity: 1;
    clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
    translate: 0 -35%;
    rotate: none;
  }

  .mockup-browser {
    border-radius: var(--radius-box);
    position: relative;
    overflow: auto hidden;
  }

  .mockup-browser pre[data-prefix]:before {
    --tw-content: attr(data-prefix);
    content: var(--tw-content);
    text-align: right;
    display: inline-block;
  }

  .mockup-browser .mockup-browser-toolbar {
    align-items: center;
    width: 100%;
    margin-block: .75rem;
    padding-right: 1.4em;
    display: inline-flex;
  }

  .mockup-browser .mockup-browser-toolbar:where(:is(:lang(ae), :lang(ar), :lang(arc), :lang(bcc), :lang(bqi), :lang(ckb), :lang(dv), :lang(fa), :lang(glk), :lang(he), :lang(ku), :lang(mzn), :lang(nqo), :lang(pnb), :lang(ps), :lang(sd), :lang(ug), :lang(ur), :lang(yi)), [dir="rtl"], [dir="rtl"] *) {
    flex-direction: row-reverse;
  }

  .mockup-browser .mockup-browser-toolbar:before {
    content: "";
    aspect-ratio: 1;
    opacity: .3;
    border-radius: 3.40282e38px;
    height: .75rem;
    margin-right: 4.8rem;
    display: inline-block;
    box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
  }

  .mockup-browser .mockup-browser-toolbar .input {
    background-color: var(--color-base-200);
    text-overflow: ellipsis;
    white-space: nowrap;
    direction: ltr;
    align-items: center;
    gap: .5rem;
    height: 100%;
    margin-inline: auto;
    font-size: .75rem;
    display: flex;
    overflow: hidden;
  }

  .mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    opacity: .5;
    background-color: currentColor;
    width: 1rem;
    height: 1rem;
    -webkit-mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E") center / contain no-repeat;
    mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E") center / contain no-repeat;
  }

  :where(.btn) {
    width: unset;
  }

  .btn {
    cursor: pointer;
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, .875rem);
    outline-color: var(--btn-color, var(--color-base-content));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 .5px oklch(100% 0 0 / calc(var(--depth) * .15));
    touch-action: manipulation;
    box-shadow: 0 .5px 0 .5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, .25rem) * 10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
    --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000), 0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
    --btn-noise: var(--fx-noise);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    flex-wrap: nowrap;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    gap: .375rem;
    font-weight: 600;
    transition-property: color, background-color, border-color, box-shadow;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    display: inline-flex;
  }

  @media (hover: hover) {
    .btn:hover {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
    }
  }

  .btn:focus-visible, .btn:has(:focus-visible) {
    isolation: isolate;
    outline-width: 2px;
    outline-style: solid;
  }

  .btn:active:not(.btn-active) {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
    --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
    --btn-shadow: 0 0 0 0 oklch(0% 0 0 / 0), 0 0 0 0 oklch(0% 0 0 / 0);
    translate: 0 .5px;
  }

  .btn:is(input[type="checkbox"], input[type="radio"]) {
    appearance: none;
  }

  .btn:is(input[type="checkbox"], input[type="radio"]):after {
    --tw-content: attr(aria-label);
    content: var(--tw-content);
  }

  .btn:where(input:checked:not(.filter .btn)) {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
    isolation: isolate;
  }

  .card {
    border-radius: var(--radius-box);
    outline-offset: 2px;
    outline: 0 solid #0000;
    flex-direction: column;
    transition: outline .2s ease-in-out;
    display: flex;
    position: relative;
  }

  .card:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .card:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .card:focus-visible {
    outline-color: currentColor;
  }

  .card :where(figure:first-child) {
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-end-radius: unset;
    border-end-start-radius: unset;
    overflow: hidden;
  }

  .card :where(figure:last-child) {
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-end-radius: inherit;
    border-end-start-radius: inherit;
    overflow: hidden;
  }

  .card figure {
    justify-content: center;
    align-items: center;
    display: flex;
  }

  .card:has( > input:is(input[type="checkbox"], input[type="radio"])) {
    cursor: pointer;
    user-select: none;
  }

  .card:has( > :checked) {
    outline: 2px solid;
  }

  .footer {
    grid-auto-flow: row;
    place-items: start;
    gap: 2.5rem 1rem;
    width: 100%;
    font-size: .875rem;
    line-height: 1.25rem;
    display: grid;
  }

  .footer > * {
    place-items: start;
    gap: .5rem;
    display: grid;
  }

  .footer.footer-center {
    text-align: center;
    grid-auto-flow: column dense;
    place-items: center;
  }

  .footer.footer-center > * {
    place-items: center;
  }

  .loading {
    pointer-events: none;
    aspect-ratio: 1;
    vertical-align: middle;
    width: calc(var(--size-selector, .25rem) * 6);
    background-color: currentColor;
    display: inline-block;
    -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    -webkit-mask-position: center;
    mask-position: center;
    -webkit-mask-size: 100%;
    mask-size: 100%;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
  }

  .menu {
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    flex-flow: column wrap;
    width: fit-content;
    padding: .5rem;
    font-size: .875rem;
    display: flex;
  }

  .menu :where(li ul) {
    white-space: nowrap;
    margin-inline-start: 1rem;
    padding-inline-start: .5rem;
    position: relative;
  }

  .menu :where(li ul):before {
    inset-inline-start: 0;
    background-color: var(--color-base-content);
    opacity: .1;
    width: var(--border);
    content: "";
    position: absolute;
    top: .75rem;
    bottom: .75rem;
  }

  .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
    display: none;
  }

  .menu :where(li:not(.menu-title) > :not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
    border-radius: var(--radius-field);
    text-align: start;
    text-wrap: balance;
    user-select: none;
    grid-auto-columns: minmax(auto, max-content) auto max-content;
    grid-auto-flow: column;
    align-content: flex-start;
    align-items: center;
    gap: .5rem;
    padding-block: .375rem;
    padding-inline: .75rem;
    transition-property: color, background-color, box-shadow;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    display: grid;
  }

  .menu :where(li > details > summary) {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li > details > summary) {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .menu :where(li > details > summary)::-webkit-details-marker {
    display: none;
  }

  .menu :where(li > details > summary):after, .menu :where(li > .menu-dropdown-toggle):after {
    content: "";
    transform-origin: 50%;
    pointer-events: none;
    justify-self: flex-end;
    width: .375rem;
    height: .375rem;
    transition-property: rotate, translate;
    transition-duration: .2s;
    display: block;
    translate: 0 -1px;
    rotate: -135deg;
    box-shadow: inset 2px 2px;
  }

  .menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
    translate: 0 1px;
    rotate: 45deg;
  }

  .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn).menu-focus, .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn):focus-visible {
    cursor: pointer;
    background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    color: var(--color-base-content);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn).menu-focus, .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.menu-active, :active, .btn):focus-visible {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover) {
    cursor: pointer;
    background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover) {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .menu :where(li:not(.menu-title, .disabled) > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover) {
    box-shadow: inset 0 1px oklch(0% 0 0 / .01), inset 0 -1px oklch(100% 0 0 / .01);
  }

  .menu :where(li:empty) {
    background-color: var(--color-base-content);
    opacity: .1;
    height: 1px;
    margin: .5rem 1rem;
  }

  .menu :where(li) {
    flex-flow: column wrap;
    flex-shrink: 0;
    align-items: stretch;
    display: flex;
    position: relative;
  }

  .menu :where(li) .badge {
    justify-self: flex-end;
  }

  .menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .menu :where(li) > :not(ul, .menu-title, details, .btn):active, .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    color: var(--menu-active-fg);
    background-color: var(--menu-active-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }

  .menu :where(li) > :not(ul, .menu-title, details, .btn):active:not(.menu :where(li) > :not(ul, .menu-title, details, .btn):active:active), .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active:not(.menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active:active), .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }

  .menu :where(li).menu-disabled {
    pointer-events: none;
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }

  .menu .dropdown:focus-within .menu-dropdown-toggle:after {
    translate: 0 1px;
    rotate: 45deg;
  }

  .menu .dropdown-content {
    margin-top: .5rem;
    padding: .5rem;
  }

  .menu .dropdown-content:before {
    display: none;
  }

  .toggle {
    border: var(--border) solid currentColor;
    color: var(--input-color);
    cursor: pointer;
    appearance: none;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    --radius-selector-max: calc(var(--radius-selector)  + var(--radius-selector)  + var(--radius-selector));
    border-radius: calc(var(--radius-selector)  + min(var(--toggle-p), var(--radius-selector-max))  + min(var(--border), var(--radius-selector-max)));
    padding: var(--toggle-p);
    box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
    --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
    --toggle-p: calc(var(--size) * .125);
    --size: calc(var(--size-selector, .25rem) * 6);
    width: calc((var(--size) * 2)  - (var(--border)  + var(--toggle-p)) * 2);
    height: var(--size);
    flex-shrink: 0;
    grid-template-columns: 0fr 1fr 1fr;
    place-content: center;
    transition: color .3s, grid-template-columns .2s;
    display: inline-grid;
    position: relative;
  }

  .toggle > * {
    z-index: 1;
    cursor: pointer;
    appearance: none;
    background-color: #0000;
    border: none;
    grid-column: 2 / span 1;
    grid-row-start: 1;
    height: 100%;
    padding: .125rem;
    transition: opacity .2s, rotate .4s;
  }

  .toggle > :focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .toggle > :focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .toggle > :nth-child(2) {
    color: var(--color-base-100);
    rotate: none;
  }

  .toggle > :nth-child(3) {
    color: var(--color-base-100);
    opacity: 0;
    rotate: -15deg;
  }

  .toggle:has(:checked) > :nth-child(2) {
    opacity: 0;
    rotate: 15deg;
  }

  .toggle:has(:checked) > :nth-child(3) {
    opacity: 1;
    rotate: none;
  }

  .toggle:before {
    aspect-ratio: 1;
    border-radius: var(--radius-selector);
    --tw-content: "";
    content: var(--tw-content);
    height: 100%;
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * .1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * .1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
    background-color: currentColor;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    grid-row-start: 1;
    grid-column-start: 2;
    transition: background-color .1s, translate .2s, inset-inline-start .2s;
    position: relative;
    inset-inline-start: 0;
    translate: 0;
  }

  @media (forced-colors: active) {
    .toggle:before {
      outline-style: var(--tw-outline-style);
      outline-offset: calc(1px * -1);
      outline-width: 1px;
    }
  }

  @media print {
    .toggle:before {
      outline-offset: -1rem;
      outline: .25rem solid;
    }
  }

  .toggle:focus-visible, .toggle:has(:focus-visible) {
    outline-offset: 2px;
    outline: 2px solid;
  }

  .toggle:checked, .toggle[aria-checked="true"], .toggle:has( > input:checked) {
    background-color: var(--color-base-100);
    --input-color: var(--color-base-content);
    grid-template-columns: 1fr 1fr 0fr;
  }

  .toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has( > input:checked):before {
    background-color: currentColor;
  }

  @starting-style {
    .toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has( > input:checked):before {
      opacity: 0;
    }
  }

  .toggle:indeterminate {
    grid-template-columns: .5fr 1fr .5fr;
  }

  .toggle:disabled {
    cursor: not-allowed;
    opacity: .3;
  }

  .toggle:disabled:before {
    border: var(--border) solid currentColor;
    background-color: #0000;
  }

  .label {
    white-space: nowrap;
    color: color-mix(in oklab, currentcolor 60%, transparent);
    align-items: center;
    gap: .375rem;
    display: inline-flex;
  }

  .label:has(input) {
    cursor: pointer;
  }

  .label:is(.input > *, .select > *) {
    white-space: nowrap;
    height: calc(100% - .5rem);
    font-size: inherit;
    align-items: center;
    padding-inline: .75rem;
    display: flex;
  }

  .label:is(.input > *, .select > *):first-child {
    border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
    margin-inline: -.75rem .75rem;
  }

  .label:is(.input > *, .select > *):last-child {
    border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
    margin-inline: .75rem -.75rem;
  }

  .alert {
    --alert-border-color: var(--color-base-200);
    border-radius: var(--radius-box);
    color: var(--color-base-content);
    background-color: var(--alert-color, var(--color-base-200));
    text-align: start;
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
    box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * .08)) inset, 0 1px color-mix(in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * .08));
    border-style: solid;
    grid-template-columns: auto;
    grid-auto-flow: column;
    justify-content: start;
    place-items: center start;
    gap: 1rem;
    padding-block: .75rem;
    padding-inline: 1rem;
    font-size: .875rem;
    line-height: 1.25rem;
    display: grid;
  }

  .alert:has(:nth-child(2)) {
    grid-template-columns: auto minmax(auto, 1fr);
  }

  .input {
    cursor: text;
    border: var(--border) solid #0000;
    appearance: none;
    background-color: var(--color-base-100);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: max(var(--font-size, .875rem), .875rem);
    touch-action: manipulation;
    border-color: var(--input-color);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * .1)) inset;
    --size: calc(var(--size-field, .25rem) * 10);
    --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    flex-shrink: 1;
    align-items: center;
    gap: .5rem;
    padding-inline: .75rem;
    display: inline-flex;
    position: relative;
  }

  .input:where(input) {
    display: inline-flex;
  }

  .input :where(input) {
    appearance: none;
    background-color: #0000;
    border: none;
    width: 100%;
    height: 100%;
    display: inline-flex;
  }

  .input :where(input):focus, .input :where(input):focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .input :where(input):focus, .input :where(input):focus-within {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .input :where(input[type="url"]), .input :where(input[type="email"]) {
    direction: ltr;
  }

  .input :where(input[type="date"]) {
    display: inline-flex;
  }

  .input:focus, .input:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
    z-index: 1;
  }

  @media (pointer: coarse) {
    @supports (-webkit-touch-callout: none) {
      .input:focus, .input:focus-within {
        --font-size: 1rem;
      }
    }
  }

  .input:has( > input[disabled]), .input:is(:disabled, [disabled]), fieldset:disabled .input {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
  }

  .input:has( > input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder, fieldset:disabled .input::placeholder {
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }

  .input:has( > input[disabled]), .input:is(:disabled, [disabled]), fieldset:disabled .input {
    box-shadow: none;
  }

  .input:has( > input[disabled]) > input[disabled] {
    cursor: not-allowed;
  }

  .input::-webkit-date-and-time-value {
    text-align: inherit;
  }

  .input[type="number"]::-webkit-inner-spin-button {
    margin-block: -.75rem;
    margin-inline-end: -.75rem;
  }

  .input::-webkit-calendar-picker-indicator {
    position: absolute;
    inset-inline-end: .75em;
  }

  .input:has( > input[type="date"]) :where(input[type="date"]) {
    webkit-appearance: none;
    appearance: none;
    display: inline-flex;
  }

  .input:has( > input[type="date"]) input[type="date"]::-webkit-calendar-picker-indicator {
    cursor: pointer;
    width: 1em;
    height: 1em;
    position: absolute;
    inset-inline-end: .75em;
  }
}

@keyframes rating {
  0%, 40% {
    filter: brightness(1.05) contrast(1.05);
    scale: 1.1;
  }
}

@keyframes dropdown {
  0% {
    opacity: 0;
  }
}

@layer daisyui.modifier {
  .checkbox-primary {
    color: var(--color-primary-content);
    --input-color: var(--color-primary);
  }

  .checkbox:disabled {
    cursor: not-allowed;
    opacity: .2;
  }

  .btn-disabled, .btn:disabled, .btn[disabled] {
    pointer-events: none;
    --btn-border: #0000;
    --btn-noise: none;
    --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
  }

  .btn-disabled:not(.btn-link, .btn-ghost), .btn:disabled:not(.btn-link, .btn-ghost), .btn[disabled]:not(.btn-link, .btn-ghost) {
    background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    box-shadow: none;
  }

  @media (hover: hover) {
    .btn-disabled:hover, .btn:disabled:hover, .btn[disabled]:hover {
      pointer-events: none;
      background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
      --btn-border: #0000;
      --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
    }
  }

  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-border: #0000;
    --btn-noise: none;
  }

  .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .btn-disabled) {
    --btn-fg: currentColor;
    outline-color: currentColor;
  }

  @media (hover: none) {
    .btn-ghost:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-border: #0000;
      --btn-noise: none;
      --btn-fg: currentColor;
    }
  }

  .btn-outline:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-fg: var(--btn-color);
    --btn-border: var(--btn-color);
    --btn-noise: none;
  }

  @media (hover: none) {
    .btn-outline:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-fg: var(--btn-color);
      --btn-border: var(--btn-color);
      --btn-noise: none;
    }
  }

  .btn-sm {
    --fontsize: .75rem;
    --btn-p: .75rem;
    --size: calc(var(--size-field, .25rem) * 8);
  }

  .btn-circle {
    width: var(--size);
    height: var(--size);
    border-radius: 3.40282e38px;
    padding-inline: 0;
  }
}

@keyframes radio {
  0% {
    padding: 5px;
  }

  50% {
    padding: 3px;
  }
}

@keyframes toast {
  0% {
    opacity: 0;
    scale: .9;
  }

  100% {
    opacity: 1;
    scale: 1;
  }
}

.prose .btn {
  text-decoration-line: none;
}

@layer daisyui.modifier.color {
  .btn-primary {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
  }

  .btn-error {
    --btn-color: var(--color-error);
    --btn-fg: var(--color-error-content);
  }
}

@keyframes skeleton {
  0% {
    background-position: 150%;
  }

  100% {
    background-position: -50%;
  }
}

.alert {
  border-width: var(--border);
  border-color: var(--alert-border-color, var(--color-base-200));
}

@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}

.pointer-events-none {
  pointer-events: none;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-0 {
  inset: 0;
}

.-left-20 {
  left: -5rem;
}

.-left-32 {
  left: -8rem;
}

.-top-32 {
  top: -8rem;
}

.bottom-0 {
  bottom: 0;
}

.bottom-10 {
  bottom: 2.5rem;
}

.bottom-4 {
  bottom: 1rem;
}

.bottom-\[-25\%\] {
  bottom: -25%;
}

.left-1\/2 {
  left: 50%;
}

.left-10 {
  left: 2.5rem;
}

.right-0 {
  right: 0;
}

.right-10 {
  right: 2.5rem;
}

.right-16 {
  right: 4rem;
}

.right-4 {
  right: 1rem;
}

.right-\[-15\%\] {
  right: -15%;
}

.top-0 {
  top: 0;
}

.top-1\/2 {
  top: 50%;
}

.top-10 {
  top: 2.5rem;
}

.top-32 {
  top: 8rem;
}

.right-3 {
  right: .75rem;
}

.top-3 {
  top: .75rem;
}

.-z-10 {
  z-index: -10;
}

.z-40 {
  z-index: 40;
}

.z-50 {
  z-index: 50;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mb-1 {
  margin-bottom: .25rem;
}

.mb-2 {
  margin-bottom: .5rem;
}

.mb-3 {
  margin-bottom: .75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.mt-1 {
  margin-top: .25rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-2 {
  margin-top: .5rem;
}

.mt-3 {
  margin-top: .75rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mt-8 {
  margin-top: 2rem;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mt-12 {
  margin-top: 3rem;
}

.line-clamp-1 {
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.line-clamp-3 {
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.line-clamp-4 {
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.line-clamp-2 {
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-32 {
  height: 8rem;
}

.h-40 {
  height: 10rem;
}

.h-48 {
  height: 12rem;
}

.h-72 {
  height: 18rem;
}

.h-96 {
  height: 24rem;
}

.h-\[300px\] {
  height: 300px;
}

.h-\[420px\] {
  height: 420px;
}

.h-\[520px\] {
  height: 520px;
}

.h-64 {
  height: 16rem;
}

.h-56 {
  height: 14rem;
}

.max-h-64 {
  max-height: 16rem;
}

.min-h-\[80vh\] {
  min-height: 80vh;
}

.min-h-\[85vh\] {
  min-height: 85vh;
}

.min-h-screen {
  min-height: 100vh;
}

.w-40 {
  width: 10rem;
}

.w-48 {
  width: 12rem;
}

.w-72 {
  width: 18rem;
}

.w-96 {
  width: 24rem;
}

.w-\[300px\] {
  width: 300px;
}

.w-\[420px\] {
  width: 420px;
}

.w-\[520px\] {
  width: 520px;
}

.w-full {
  width: 100%;
}

.max-w-2xl {
  max-width: 42rem;
}

.max-w-3xl {
  max-width: 48rem;
}

.max-w-5xl {
  max-width: 64rem;
}

.max-w-6xl {
  max-width: 72rem;
}

.max-w-md {
  max-width: 28rem;
}

.max-w-4xl {
  max-width: 56rem;
}

.max-w-lg {
  max-width: 32rem;
}

.flex-1 {
  flex: 1;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.animate-\[spin_45s_linear_infinite\] {
  animation: 45s linear infinite spin;
}

.animate-\[spin_60s_linear_infinite_reverse\] {
  animation: 60s linear infinite reverse spin;
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

.animate-pulse {
  animation: 2s cubic-bezier(.4, 0, .6, 1) infinite pulse;
}

.cursor-pointer {
  cursor: pointer;
}

.select-none {
  user-select: none;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-2 {
  gap: .5rem;
}

.gap-3 {
  gap: .75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-10 {
  gap: 2.5rem;
}

.space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(.75rem * var(--tw-space-y-reverse));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.space-y-10 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.5rem * var(--tw-space-y-reverse));
}

.overflow-hidden {
  overflow: hidden;
}

.whitespace-pre-line {
  white-space: pre-line;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: .5rem;
}

.rounded-xl {
  border-radius: .75rem;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-base-300 {
  border-color: var(--color-base-300);
}

.bg-base-100 {
  background-color: var(--color-base-100);
}

.bg-base-200 {
  background-color: var(--color-base-200);
}

.bg-blue-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity));
}

.bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

.bg-slate-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(241 245 249 / var(--tw-bg-opacity));
}

.bg-black\/50 {
  background-color: #00000080;
}

.bg-gradient-to-br {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.bg-gradient-to-tl {
  background-image: linear-gradient(to top left, var(--tw-gradient-stops));
}

.bg-gradient-to-tr {
  background-image: linear-gradient(to top right, var(--tw-gradient-stops));
}

.from-blue-400\/30 {
  --tw-gradient-from: #60a5fa4d var(--tw-gradient-from-position);
  --tw-gradient-to: #60a5fa00 var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-fuchsia-400\/25 {
  --tw-gradient-from: #e879f940 var(--tw-gradient-from-position);
  --tw-gradient-to: #e879f900 var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-indigo-500\/10 {
  --tw-gradient-from: #6366f11a var(--tw-gradient-from-position);
  --tw-gradient-to: #6366f100 var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-pink-400\/10 {
  --tw-gradient-from: #f472b61a var(--tw-gradient-from-position);
  --tw-gradient-to: #f472b600 var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.via-base-200 {
  --tw-gradient-to: #fff0 var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--color-base-200) var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.via-purple-500\/5 {
  --tw-gradient-to: #a855f700 var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #a855f70d var(--tw-gradient-via-position), var(--tw-gradient-to);
}

.to-base-100 {
  --tw-gradient-to: var(--color-base-100) var(--tw-gradient-to-position);
}

.to-cyan-400\/20 {
  --tw-gradient-to: #22d3ee33 var(--tw-gradient-to-position);
}

.to-pink-500\/10 {
  --tw-gradient-to: #ec48991a var(--tw-gradient-to-position);
}

.to-purple-400\/15 {
  --tw-gradient-to: #c084fc26 var(--tw-gradient-to-position);
}

.to-transparent {
  --tw-gradient-to: transparent var(--tw-gradient-to-position);
}

.object-cover {
  object-fit: cover;
}

.p-4 {
  padding: 1rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-2 {
  padding-left: .5rem;
  padding-right: .5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.pt-3 {
  padding-top: .75rem;
}

.pb-6 {
  padding-bottom: 1.5rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.font-sans {
  font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-6xl {
  font-size: 3.75rem;
  line-height: 1;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-sm {
  font-size: .875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: .75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.leading-snug {
  line-height: 1.375;
}

.leading-relaxed {
  line-height: 1.625;
}

.tracking-tight {
  letter-spacing: -.025em;
}

.text-base-content {
  color: var(--color-base-content);
}

.text-error {
  color: var(--color-error);
}

.text-green-600 {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity));
}

.text-primary {
  color: var(--color-primary);
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

.text-warning {
  color: var(--color-warning);
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.opacity-40 {
  opacity: .4;
}

.opacity-50 {
  opacity: .5;
}

.opacity-60 {
  opacity: .6;
}

.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px #00000040;
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 #0000000d;
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -5px #0000001a, 0 8px 10px -6px #0000001a;
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-primary {
  outline-color: var(--color-primary);
}

.blur-3xl {
  --tw-blur: blur(64px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.backdrop-blur-md {
  --tw-backdrop-blur: blur(12px);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition-all {
  transition-property: all;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.transition-opacity {
  transition-property: opacity;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.transition-transform {
  transition-property: transform;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
}

.duration-200 {
  transition-duration: .2s;
}

.join {
  --join-ss: 0;
  --join-se: 0;
  --join-es: 0;
  --join-ee: 0;
  align-items: stretch;
  display: inline-flex;
}

.join :where(.join-item) {
  border-start-start-radius: var(--join-ss, 0);
  border-start-end-radius: var(--join-se, 0);
  border-end-end-radius: var(--join-ee, 0);
  border-end-start-radius: var(--join-es, 0);
}

.join :where(.join-item) * {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join > .join-item:where(:first-child), .join :first-child:not(:last-child) :where(.join-item) {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}

.join > .join-item:where(:last-child), .join :last-child:not(:first-child) :where(.join-item) {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}

.join > .join-item:where(:only-child), .join :only-child :where(.join-item) {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-item:where(:not(:first-child, :disabled, [disabled], .btn-disabled)) {
  margin-block-start: 0;
  margin-inline-start: calc(var(--border, 1px) * -1);
}

.join-item:where(:is(:disabled, [disabled], .btn-disabled)) {
  border-width: var(--border, 1px) 0 var(--border, 1px) var(--border, 1px);
}

.join-vertical > .join-item:first-child, .join-vertical :first-child:not(:last-child) .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: 0;
}

.join-vertical > .join-item:last-child, .join-vertical :last-child:not(:first-child) .join-item {
  --join-ss: 0;
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-vertical > .join-item:only-child, .join-vertical :only-child .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-vertical .join-item:where(:not(:first-child)) {
  margin-block-start: calc(var(--border, 1px) * -1);
  margin-inline-start: 0;
}

.join-horizontal > .join-item:first-child, .join-horizontal :first-child:not(:last-child) .join-item {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}

.join-horizontal > .join-item:last-child, .join-horizontal :last-child:not(:first-child) .join-item {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}

.join-horizontal > .join-item:only-child, .join-horizontal :only-child .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-horizontal .join-item:where(:not(:first-child)) {
  margin-block-start: 0;
  margin-inline-start: calc(var(--border, 1px) * -1);
}

.hover\:z-10:hover {
  z-index: 10;
}

.hover\:-translate-y-1:hover {
  --tw-translate-y: -.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-105:hover {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:bg-blue-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity));
}

.hover\:bg-red-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(185 28 28 / var(--tw-bg-opacity));
}

.hover\:text-primary:hover {
  color: var(--color-primary);
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.hover\:opacity-90:hover {
  opacity: .9;
}

.hover\:shadow-lg:hover {
  --tw-shadow: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-md:hover {
  --tw-shadow: 0 4px 6px -1px #0000001a, 0 2px 4px -2px #0000001a;
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.disabled\:opacity-60:disabled {
  opacity: .6;
}

@media (min-width: 640px) {
  .sm\:block {
    display: block;
  }

  .sm\:h-64 {
    height: 16rem;
  }

  .sm\:h-72 {
    height: 18rem;
  }

  .sm\:w-64 {
    width: 16rem;
  }

  .sm\:w-72 {
    width: 18rem;
  }

  .sm\:w-auto {
    width: auto;
  }

  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:items-center {
    align-items: center;
  }

  .sm\:justify-between {
    justify-content: space-between;
  }

  .sm\:gap-4 {
    gap: 1rem;
  }

  .sm\:p-10 {
    padding: 2.5rem;
  }

  .sm\:p-6 {
    padding: 1.5rem;
  }

  .sm\:p-8 {
    padding: 2rem;
  }

  .sm\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .sm\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .sm\:py-12 {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }

  .sm\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .sm\:text-base {
    font-size: 1rem;
    line-height: 1.5rem;
  }

  .sm\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
}

@media (min-width: 768px) {
  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:p-10 {
    padding: 2.5rem;
  }

  .md\:p-12 {
    padding: 3rem;
  }

  .md\:px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }

  .md\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .md\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .md\:text-5xl {
    font-size: 3rem;
    line-height: 1;
  }

  .md\:text-base {
    font-size: 1rem;
    line-height: 1.5rem;
  }

  .md\:leading-tight {
    line-height: 1.25;
  }
}

@media (min-width: 1024px) {
  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (prefers-color-scheme: dark) {
  .dark\:bg-slate-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(15 23 42 / var(--tw-bg-opacity));
  }

  .dark\:text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
}

/*# sourceMappingURL=frontend_app_globals_c083601a.css.map*/